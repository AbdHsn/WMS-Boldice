@*@using X.PagedList.Mvc.Core;
    @using X.PagedList;*@
@model WMS.Models.PageModels.WarehouseVM.WarehouseCapasityVM

@{
    ViewData["Title"] = "Warehouse Capacity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">

    <div class="row">

        <div class="col-12">
            <div class="card mb-30">
                <div class="card-body pb-0">

                    @if (Model.ListWarehouseCapacity.Count() <= 0)
                    {
                        <div class="text-center">
                            <span class="badge font-11 badge-soft-purple"> No warehouse design found</span>

                        </div>
                    }
                    else
                    {
                        int index = 1;
                        @foreach (var item in Model.ListWarehouseCapacity)
                        {
                            <h4 class="mt-2 mb-1 card-title"><u> @item.Warehouse.Title Design @index </u> </h4>
                            for (int row = 1; row <= item.WarehouseCapacity.Row; row++)
                            {
                                <div class="avatar-area">
                                    <div class="media">
                                        @for (int column = 1; column <= item.WarehouseCapacity.Column; column++)
                                        {
                                            <div class="container-fluid h-100 d-inline-block mr-2 p-2" style=" background-color: rgba(0,0,255,.1)">
                                                @{
                                                    var recks = item?.ListReck.Where(r => r.SetupRow == row && r.SetupColumn == column);
                                                 }
                                                @if (recks.Count() < item.WarehouseCapacity.ReckQuantity)
                                                {
                                                <p class="m-0">
                                                    <a href="#" onclick='addReck("mdlCreateForm", "CreateForm", "Warehouses","CreateReck", "?reckQuantity=@item.WarehouseCapacity.ReckQuantity&warehouseId=@item.WarehouseCapacity.WarehouseId&row=@row&column=@column")' class="badge badge-outline-success"> <i class="zmdi zmdi-collection-plus" title="Add Reck"></i> Add Reck </a>
                                                </p>
                                                }
                                                @foreach (var insideReck in recks)
                                                {
                                            <p class="m-0">
                                                @*used for multiple reck view with their items
                                                <a href="#" onclick='viewReck("mdlReckView", "reckView", "Products","ReckView", "?warehouseId=@item.WarehouseCapacity.WarehouseId&row=@row&column=@column")' class="badge badge-light"> <i class="zmdi zmdi zmdi-layers pr-1" title="View Reck"></i>View Reckcccccc @insideReck.ReckName </a>*@
                                                
                                                <a href="#" onclick='viewReck("mdlReckView", "reckView", "Products","SingleReckView", "?reckId=@insideReck.Id")' class="badge badge-light"> <i class="zmdi zmdi zmdi-layers pr-1" title="View Reck"></i>View Reck (@insideReck.ReckName) </a>
                                            </p>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                                <br />
                            }
                            index++;
                        }

                        @*<div class="form-group pull-right">
                                @Html.PagedListPager((IPagedList)Model, page => Url.Action("WarehouseView", new { page = page }),
                               new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
                               {
                                   DisplayItemSliceAndTotal = true,
                                   ContainerDivClasses = new[] { "navigation", "btn btn-default" },
                                   LiElementClasses = new[] { "page-item" },
                                   PageClasses = new[] { "btn-success", "page-link" },
                                   ActiveLiElementClass = "btn-defult"
                               })
                            </div>*@
                    }

                </div>


            </div>
        </div>
    </div>

    <div class="modal fade" id="mdlCreateForm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-modal="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title mt-0 font-16" id="myLargeModalLabel">Add New Reck</h5>
                    <button type="button" class="close" onclick='closeModalCreateForm("mdlCreateForm","CreateForm")'>
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="CreateForm">
                        <div class="text-center">
                            <img src="~/ProjectImage/loading.gif" alt="Loading ..." />

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="mdlReckView" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-modal="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title mt-0 font-16" id="myLargeModalLabel">Reck Details</h5>
                    <button type="button" class="close" onclick='closeModalReckView("mdlReckView", "reckView")'>
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="reckView">
                        <div class="text-center">
                            <img src="~/ProjectImage/loading.gif" alt="Loading ..." />

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



</div>

@section Scripts{



    <script type="text/javascript">
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });

        function closeModalReckView(modalId, loadDivId) {
            window.location.reload();
        }

        function addReck(modalId, loadDivId, controller, action, queryString) {
            $('#' + modalId).modal({
                backdrop: 'static',
                keyboard: false,
                show: true
            });
            $('#' + loadDivId).load("/" + controller + "/" + action + queryString);
        }

        function viewReck(modalId, loadDivId, controller, action, queryString) {
            $('#' + modalId).modal({
                backdrop: 'static',
                keyboard: false,
                show: true
            });
            $('#' + loadDivId).load("/" + controller + "/" + action + queryString);
        }

    </script>

}